@{
    ViewData["Title"] = "Mapa z Leaflet.js";
}
@using AirMap.Data
@using AirMap.Helper
@using AirMap.Helpers
@inject AppDbContext DbContext



<!DOCTYPE html>
<html>
<head>
    <title class="text-center">@ViewData["Title"]</title>
    <!-- Leaflet core -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" crossorigin=""></script>

    <!-- Leaflet Routing -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css" />
    <script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>
	
    <!-- MarkerCluster plugin --> 
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.5.3/dist/MarkerCluster.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.5.3/dist/MarkerCluster.default.css" />

    <script src="https://unpkg.com/leaflet.markercluster@1.5.3/dist/leaflet.markercluster.js"></script>
    
    <link rel="stylesheet" href="~/css/map.css" />

</head>

<body>
<!-- Map container -->
<div class='custom-popup' id='map'></div>
</body>

<script src="~/js/map.js"></script>
</html>

<script id="sensorData" type="application/json">
@{
	var allSensors = await DatabaseHelper.GetAllAsync<SensorModel>(DbContext);
	allSensors = await DatabaseHelper.GetMissingData<SensorModel, Location>(allSensors!, DbContext);
	allSensors = await DatabaseHelper.GetMissingData<SensorModel, Sensor>(allSensors!, DbContext);
	allSensors = await DatabaseHelper.GetMissingDataFromList<SensorModel, SensorDataValues>(allSensors, DbContext);
	
    var serializedSensorData = Json.Serialize(allSensors); // To resolve TS1109
}
    @Html.Raw(serializedSensorData)
</script>



